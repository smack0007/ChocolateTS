<Project DefaultTargets="Build">    
    <UsingTask
        TaskName="ChocolateTS.Build.Tasks.ResolveHtmlImports"
        AssemblyFile="$(MSBuildThisFileDirectory)/ChocolateTS.Build.Tasks.dll" />
    
    <ItemGroup>
        <!-- Add default SCSS entry point. -->
        <ScssEntryPoints
            Condition="@(ScssEntryPoints) == ''"
            Include="main.scss"
            OutputPath="$(MSBuildProjectName).css" />
        
        <!-- Add default HTML entry point. -->
        <HtmlEntryPoints
            Condition="'@(HtmlEntryPoints)' == ''"
            Include="main.html"
            OutputPath="index.html" />
    </ItemGroup>

    <!--
    Build
    -->

    <PropertyGroup>
        <BuildDependencies>BuildTs;BuildScss;BuildHtml</BuildDependencies>
        <BuildDependencies Condition="$(OutputType) == 'Nwjs'">$(BuildDependencies);CopyNwjsManifest</BuildDependencies>
    </PropertyGroup>

    <Target Name="Build" DependsOnTargets="DebugInfo;$(BuildDependencies)" />

    <Target Name="BuildTs">        
        <PropertyGroup>
            <BootstrapperTsPath>$(SourceDirectory)$(OutputFileNameWithoutExtension).ts</BootstrapperTsPath>
            <BootstraperTs><![CDATA[
/// <reference path="$(TsMainPath)" />
$([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)ChocolateTS.ts'))
            ]]></BootstraperTs>
        </PropertyGroup>

        <WriteLinesToFile
            File="$(BootstrapperTsPath)"
            Overwrite="true"
            Lines="$(BootstraperTs)" />

        <Exec
            Command="tsc &quot;$(BootstrapperTsPath)&quot; $(TsCompilerFlags) --outFile &quot;$(OutputDirectory)$(OutputFileNameWithoutExtension).js&quot;"
            ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="TscExitCode" />
        </Exec>

        <Delete Files="$(BootstrapperTsPath)" />

        <Error
            Condition="$(TscExitCode) != 0"
            Text="tsc exited with code $(TscExitCode)." />
    </Target>

    <Target Name="BuildScss" Outputs="%(ScssEntryPoints.Identity)">
        <Error
            Condition="!Exists('$(SourceDirectory)%(ScssEntryPoints.Identity)')"
            Text="Scss entry point '$(SourceDirectory)%(ScssEntryPoints.Identity)' does not exist." />

        <ItemGroup>
            <HtmlEntryPoints Condition="%(ScssEntryPoints.OutputPath) == ''">
                <OutputPath>%(ScssEntryPoints.RelativeDir)%(ScssEntryPoints.FileName).css</OutputPath>
            </HtmlEntryPoints>
        </ItemGroup>

        <Exec
            Command="node-sass $(ScssCompilerFlags) &quot;$(SourceDirectory)%(ScssEntryPoints.Identity)&quot;"
            ConsoleToMSBuild="true"
            EchoOff="true"
            ContinueOnError="true">
            <Output TaskParameter="ConsoleOutput" PropertyName="_ScssOutput" />
            <Output TaskParameter="ExitCode" PropertyName="_NodeSassExitCode" />
        </Exec>

        <Error
            Condition="$(_NodeSassExitCode) != 0"
            Text="node-sass exited with code $(_NodeSassExitCode)." />

        <Message Text="Writing &quot;$(OutputDirectory)%(ScssEntryPoints.OutputPath)&quot;" />

        <WriteLinesToFile
            File="$(OutputDirectory)%(ScssEntryPoints.OutputPath)"
            Overwrite="true"
            Lines="$(_ScssOutput)" />
    </Target>

    <Target Name="BuildHtml" Outputs="%(HtmlEntryPoints.Identity)">        
        <Error
            Condition="!Exists('$(SourceDirectory)%(HtmlEntryPoints.Identity)')"
            Text="Html entry point '$(SourceDirectory)%(HtmlEntryPoints.Identity)' does not exist." />
        
        <ItemGroup>
            <HtmlEntryPoints Condition="%(HtmlEntryPoints.OutputPath) == ''">
                <OutputPath>%(HtmlEntryPoints.RelativeDir)%(HtmlEntryPoints.FileName).html</OutputPath>
            </HtmlEntryPoints>
        </ItemGroup>

        <ResolveHtmlImports EntryPointPath="%(HtmlEntryPoints.Identity)" SourceDirectory="$(SourceDirectory)">
            <Output TaskParameter="Output" PropertyName="_HtmlOutput" />
        </ResolveHtmlImports>

        <Message Text="Writing &quot;$(OutputDirectory)%(HtmlEntryPoints.OutputPath)&quot;" />

        <WriteLinesToFile
            File="$(OutputDirectory)%(HtmlEntryPoints.OutputPath)"
            Overwrite="true"
            Lines="$(_HtmlOutput)" />
    </Target>

    <Target Name="CopyNwjsManifest" Inputs="$(SourceDirectory)$(NwjsManifestPath)" Outputs="$(OutputDirectory)package.json">
        <Copy SourceFiles="$(SourceDirectory)$(NwjsManifestPath)" DestinationFiles="$(OutputDirectory)package.json" />
    </Target>

    <!--
    Run
    -->

    <Target Name="Run">
        <!-- TODO: Need to find a way to determine current platform. -->
        <Exec
            Condition="$(OutputType) == 'nwjs'"
            WorkingDirectory="$(MSBuildProjectDirectory)"
            Command="&quot;$(NwjsRootDirectory)win-x64/nw&quot; &quot;$(OutputDirectory)&quot;" />
    </Target>

    <PropertyGroup>
        <DirectoryBuildTargetsFile>$([MSBuild]::GetPathOfFileAbove('Directory.Build.targets', '$(MSBuildProjectDirectory)'))</DirectoryBuildTargetsFile>
    </PropertyGroup>

    <Import
        Condition="$(DirectoryBuildTargetsFile) != ''"
        Project="$(DirectoryBuildTargetsFile)" />
</Project>